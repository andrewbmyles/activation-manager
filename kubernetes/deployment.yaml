apiVersion: apps/v1
kind: Deployment
metadata:
  name: audience-manager-frontend
  labels:
    app: audience-manager
    component: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audience-manager
      component: frontend
  template:
    metadata:
      labels:
        app: audience-manager
        component: frontend
    spec:
      containers:
      - name: frontend
        image: audience-manager-frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_API_URL
          value: "http://audience-manager-backend:5000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audience-manager-backend
  labels:
    app: audience-manager
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audience-manager
      component: backend
  template:
    metadata:
      labels:
        app: audience-manager
        component: backend
    spec:
      containers:
      - name: backend
        image: audience-manager-backend:latest
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: audience-manager-secrets
              key: database-url
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: DATA_PATH
          value: "/app/data/synthetic_data.csv"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: audience-data-pvc
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: audience_manager
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: audience-manager-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: audience-manager-secrets
              key: postgres-password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"