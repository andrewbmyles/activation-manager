export interface VariableMetadata {
  id: string;
  name: string;
  category: string;
  subcategory?: string;
  description?: string;
  dataType: 'string' | 'number' | 'boolean' | 'date' | 'array';
  operators: string[];
  hierarchy: number;
  sortOrder: number;
  examples?: string[];
  tooltip?: string;
}

export const variableCategories = [
  'Demographics',
  'Behavioral',
  'Geographic',
  'Technographic',
  'Transactional',
  'Engagement',
  'Custom Attributes',
] as const;

export const variableMetadata: VariableMetadata[] = [
  // Demographics
  {
    id: 'demo_age',
    name: 'Age',
    category: 'Demographics',
    description: 'User age in years',
    dataType: 'number',
    operators: ['equals', 'greater_than', 'less_than', 'between'],
    hierarchy: 1,
    sortOrder: 1,
    examples: ['18', '25-34', '65+'],
    tooltip: 'Age of the user based on registration or inferred data',
  },
  {
    id: 'demo_age_range',
    name: 'Age Range',
    category: 'Demographics',
    subcategory: 'Age',
    description: 'Predefined age ranges',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 2,
    sortOrder: 2,
    examples: ['18-24', '25-34', '35-44', '45-54', '55-64', '65+'],
  },
  {
    id: 'demo_gender',
    name: 'Gender',
    category: 'Demographics',
    description: 'User gender',
    dataType: 'string',
    operators: ['equals', 'in', 'not_equals'],
    hierarchy: 1,
    sortOrder: 3,
    examples: ['Male', 'Female', 'Other', 'Prefer not to say'],
  },
  {
    id: 'demo_income',
    name: 'Household Income',
    category: 'Demographics',
    description: 'Annual household income in USD',
    dataType: 'number',
    operators: ['equals', 'greater_than', 'less_than', 'between'],
    hierarchy: 1,
    sortOrder: 4,
    examples: ['< $25k', '$25k-$50k', '$50k-$75k', '$75k-$100k', '$100k+'],
    tooltip: 'Estimated annual household income',
  },
  {
    id: 'demo_education',
    name: 'Education Level',
    category: 'Demographics',
    description: 'Highest education level completed',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 1,
    sortOrder: 5,
    examples: ['High School', 'Some College', 'Bachelor\'s', 'Master\'s', 'Doctorate'],
  },
  {
    id: 'demo_marital_status',
    name: 'Marital Status',
    category: 'Demographics',
    description: 'Current marital status',
    dataType: 'string',
    operators: ['equals', 'in', 'not_equals'],
    hierarchy: 1,
    sortOrder: 6,
    examples: ['Single', 'Married', 'Divorced', 'Widowed'],
  },
  {
    id: 'demo_children',
    name: 'Has Children',
    category: 'Demographics',
    description: 'Whether the user has children',
    dataType: 'boolean',
    operators: ['equals'],
    hierarchy: 1,
    sortOrder: 7,
  },
  {
    id: 'demo_children_count',
    name: 'Number of Children',
    category: 'Demographics',
    subcategory: 'Children',
    description: 'Number of children in household',
    dataType: 'number',
    operators: ['equals', 'greater_than', 'less_than'],
    hierarchy: 2,
    sortOrder: 8,
    examples: ['0', '1', '2', '3+'],
  },

  // Behavioral
  {
    id: 'behav_purchase_frequency',
    name: 'Purchase Frequency',
    category: 'Behavioral',
    description: 'Number of purchases in last 90 days',
    dataType: 'number',
    operators: ['equals', 'greater_than', 'less_than', 'between'],
    hierarchy: 1,
    sortOrder: 1,
    tooltip: 'Total number of purchases made in the last 90 days',
  },
  {
    id: 'behav_avg_order_value',
    name: 'Average Order Value',
    category: 'Behavioral',
    subcategory: 'Purchase Behavior',
    description: 'Average value of orders in USD',
    dataType: 'number',
    operators: ['equals', 'greater_than', 'less_than', 'between'],
    hierarchy: 2,
    sortOrder: 2,
    examples: ['< $50', '$50-$100', '$100-$250', '$250+'],
  },
  {
    id: 'behav_last_purchase',
    name: 'Days Since Last Purchase',
    category: 'Behavioral',
    subcategory: 'Purchase Behavior',
    description: 'Number of days since last purchase',
    dataType: 'number',
    operators: ['equals', 'greater_than', 'less_than', 'between'],
    hierarchy: 2,
    sortOrder: 3,
    examples: ['0-7', '8-30', '31-90', '90+'],
  },
  {
    id: 'behav_cart_abandoner',
    name: 'Cart Abandoner',
    category: 'Behavioral',
    description: 'Has abandoned cart in last 30 days',
    dataType: 'boolean',
    operators: ['equals'],
    hierarchy: 1,
    sortOrder: 4,
  },
  {
    id: 'behav_email_engagement',
    name: 'Email Engagement Level',
    category: 'Behavioral',
    subcategory: 'Engagement',
    description: 'Level of email engagement',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 2,
    sortOrder: 5,
    examples: ['High', 'Medium', 'Low', 'None'],
  },
  {
    id: 'behav_website_visits',
    name: 'Website Visits (30 days)',
    category: 'Behavioral',
    subcategory: 'Engagement',
    description: 'Number of website visits in last 30 days',
    dataType: 'number',
    operators: ['equals', 'greater_than', 'less_than', 'between'],
    hierarchy: 2,
    sortOrder: 6,
  },
  {
    id: 'behav_product_views',
    name: 'Product Views',
    category: 'Behavioral',
    subcategory: 'Browsing',
    description: 'Products viewed in last 30 days',
    dataType: 'array',
    operators: ['contains', 'not_contains'],
    hierarchy: 2,
    sortOrder: 7,
    examples: ['Electronics', 'Clothing', 'Home & Garden', 'Sports'],
  },

  // Geographic
  {
    id: 'geo_country',
    name: 'Country',
    category: 'Geographic',
    description: 'Country of residence',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 1,
    sortOrder: 1,
    examples: ['United States', 'Canada', 'United Kingdom', 'Australia'],
  },
  {
    id: 'geo_state',
    name: 'State/Province',
    category: 'Geographic',
    subcategory: 'Location',
    description: 'State or province',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 2,
    sortOrder: 2,
    examples: ['California', 'New York', 'Texas', 'Florida'],
  },
  {
    id: 'geo_city',
    name: 'City',
    category: 'Geographic',
    subcategory: 'Location',
    description: 'City of residence',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 3,
    sortOrder: 3,
    examples: ['New York', 'Los Angeles', 'Chicago', 'Houston'],
  },
  {
    id: 'geo_zip',
    name: 'ZIP/Postal Code',
    category: 'Geographic',
    subcategory: 'Location',
    description: 'ZIP or postal code',
    dataType: 'string',
    operators: ['equals', 'in', 'starts_with'],
    hierarchy: 3,
    sortOrder: 4,
  },
  {
    id: 'geo_dma',
    name: 'DMA (Designated Market Area)',
    category: 'Geographic',
    description: 'Nielsen DMA region',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 1,
    sortOrder: 5,
    examples: ['New York', 'Los Angeles', 'Chicago', 'Philadelphia'],
  },
  {
    id: 'geo_timezone',
    name: 'Time Zone',
    category: 'Geographic',
    description: 'User time zone',
    dataType: 'string',
    operators: ['equals', 'in'],
    hierarchy: 1,
    sortOrder: 6,
    examples: ['EST', 'CST', 'MST', 'PST'],
  },

  // Technographic
  {
    id: 'tech_device_type',
    name: 'Device Type',
    category: 'Technographic',
    description: 'Primary device type',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 1,
    sortOrder: 1,
    examples: ['Desktop', 'Mobile', 'Tablet', 'Smart TV'],
  },
  {
    id: 'tech_os',
    name: 'Operating System',
    category: 'Technographic',
    subcategory: 'Device',
    description: 'Device operating system',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 2,
    sortOrder: 2,
    examples: ['iOS', 'Android', 'Windows', 'macOS'],
  },
  {
    id: 'tech_browser',
    name: 'Browser',
    category: 'Technographic',
    subcategory: 'Device',
    description: 'Web browser used',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 2,
    sortOrder: 3,
    examples: ['Chrome', 'Safari', 'Firefox', 'Edge'],
  },
  {
    id: 'tech_connection_type',
    name: 'Connection Type',
    category: 'Technographic',
    description: 'Internet connection type',
    dataType: 'string',
    operators: ['equals', 'in'],
    hierarchy: 1,
    sortOrder: 4,
    examples: ['WiFi', 'Cellular', 'Broadband'],
  },

  // Transactional
  {
    id: 'trans_customer_lifetime_value',
    name: 'Customer Lifetime Value',
    category: 'Transactional',
    description: 'Total lifetime value in USD',
    dataType: 'number',
    operators: ['equals', 'greater_than', 'less_than', 'between'],
    hierarchy: 1,
    sortOrder: 1,
    tooltip: 'Total revenue generated by customer since first purchase',
  },
  {
    id: 'trans_first_purchase_date',
    name: 'First Purchase Date',
    category: 'Transactional',
    description: 'Date of first purchase',
    dataType: 'date',
    operators: ['equals', 'before', 'after', 'between'],
    hierarchy: 1,
    sortOrder: 2,
  },
  {
    id: 'trans_last_purchase_category',
    name: 'Last Purchase Category',
    category: 'Transactional',
    subcategory: 'Purchase History',
    description: 'Category of last purchased item',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 2,
    sortOrder: 3,
    examples: ['Electronics', 'Clothing', 'Home', 'Beauty'],
  },
  {
    id: 'trans_preferred_payment',
    name: 'Preferred Payment Method',
    category: 'Transactional',
    description: 'Most used payment method',
    dataType: 'string',
    operators: ['equals', 'in'],
    hierarchy: 1,
    sortOrder: 4,
    examples: ['Credit Card', 'Debit Card', 'PayPal', 'Apple Pay'],
  },
  {
    id: 'trans_discount_usage',
    name: 'Discount Code Usage',
    category: 'Transactional',
    subcategory: 'Promotions',
    description: 'Frequency of discount code usage',
    dataType: 'string',
    operators: ['equals', 'in'],
    hierarchy: 2,
    sortOrder: 5,
    examples: ['Always', 'Often', 'Sometimes', 'Never'],
  },

  // Engagement
  {
    id: 'eng_loyalty_status',
    name: 'Loyalty Program Status',
    category: 'Engagement',
    description: 'Current loyalty program tier',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 1,
    sortOrder: 1,
    examples: ['Bronze', 'Silver', 'Gold', 'Platinum'],
  },
  {
    id: 'eng_email_subscriber',
    name: 'Email Subscriber',
    category: 'Engagement',
    subcategory: 'Communications',
    description: 'Subscribed to email communications',
    dataType: 'boolean',
    operators: ['equals'],
    hierarchy: 2,
    sortOrder: 2,
  },
  {
    id: 'eng_sms_subscriber',
    name: 'SMS Subscriber',
    category: 'Engagement',
    subcategory: 'Communications',
    description: 'Subscribed to SMS communications',
    dataType: 'boolean',
    operators: ['equals'],
    hierarchy: 2,
    sortOrder: 3,
  },
  {
    id: 'eng_app_user',
    name: 'Mobile App User',
    category: 'Engagement',
    description: 'Has downloaded and used mobile app',
    dataType: 'boolean',
    operators: ['equals'],
    hierarchy: 1,
    sortOrder: 4,
  },
  {
    id: 'eng_social_follower',
    name: 'Social Media Follower',
    category: 'Engagement',
    subcategory: 'Social',
    description: 'Follows brand on social media',
    dataType: 'array',
    operators: ['contains', 'not_contains'],
    hierarchy: 2,
    sortOrder: 5,
    examples: ['Facebook', 'Instagram', 'Twitter', 'TikTok'],
  },

  // Custom Attributes
  {
    id: 'custom_segment',
    name: 'Custom Segment',
    category: 'Custom Attributes',
    description: 'Pre-defined custom segments',
    dataType: 'string',
    operators: ['equals', 'in', 'not_in'],
    hierarchy: 1,
    sortOrder: 1,
    examples: ['VIP', 'At Risk', 'New Customer', 'Churned'],
  },
  {
    id: 'custom_score',
    name: 'Propensity Score',
    category: 'Custom Attributes',
    description: 'Custom propensity scores',
    dataType: 'number',
    operators: ['equals', 'greater_than', 'less_than', 'between'],
    hierarchy: 1,
    sortOrder: 2,
    tooltip: 'Machine learning-based propensity scores (0-100)',
  },
  {
    id: 'custom_tags',
    name: 'Custom Tags',
    category: 'Custom Attributes',
    description: 'Custom tags applied to users',
    dataType: 'array',
    operators: ['contains', 'not_contains'],
    hierarchy: 1,
    sortOrder: 3,
    examples: ['Early Adopter', 'Influencer', 'Brand Ambassador'],
  },
];

export const operatorLabels: Record<string, string> = {
  equals: 'Equals',
  not_equals: 'Not Equals',
  greater_than: 'Greater Than',
  less_than: 'Less Than',
  between: 'Between',
  in: 'In',
  not_in: 'Not In',
  contains: 'Contains',
  not_contains: 'Does Not Contain',
  starts_with: 'Starts With',
  before: 'Before',
  after: 'After',
};